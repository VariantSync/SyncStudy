    }

    private static FileDiff parseFileDiff(List<String> fileDiffContent) {
        int index = 0;
        final String HUNK_START = "@@";
        String nextLine = fileDiffContent.get(index);

        // Parse the header
        List<String> header = new LinkedList<>();
        String oldFile = null;
        String newFile = null;
        {
            boolean atHeader = true;
            while (atHeader) {
                if (nextLine.startsWith("---")) {
                    oldFile = nextLine.split("\\s+")[1];
                } else if (nextLine.startsWith("+++")) {
                    newFile = nextLine.split("\\s")[1];
                }
                header.add(nextLine);
                index++;
                nextLine = fileDiffContent.get(index);
                if (nextLine.startsWith(HUNK_START)) {
                    atHeader = false;
                }
            }
        }

        // Parse the hunks
        List<Hunk> hunks = new LinkedList<>();
        {
            List<String> hunkLines = new LinkedList<>();
            hunkLines.add(nextLine);
            for (index += 1; index < fileDiffContent.size(); index++) {
                nextLine = fileDiffContent.get(index);
                if (nextLine.startsWith(HUNK_START)) {
                    hunks.add(parseHunk(hunkLines));
                    hunkLines = new LinkedList<>();
                } else {
                    hunkLines.add(nextLine);
                }
            }
            // Parse the content of the last hunk
            hunks.add(parseHunk(hunkLines));
        }

        return new FileDiff(header, hunks, oldFile, newFile);
    }

    private static Hunk parseHunk(List<String> lines) {
        // Parse the header
        HunkLocation location = parseHunkHeader(lines.get(0));
        List<Line> content = new LinkedList<>();
        for (int i = 1; i < lines.size(); i++) {
            String line = lines.get(i);
            if (line.startsWith("+")) {
                content.add(new AddedLine(line));
            } else if (line.startsWith("-")) {
                content.add(new RemovedLine(line));
            } else if (line.startsWith("\\")) {
                content.add(new MetaLine(line));
            } else {
                content.add(new ContextLine(line));
            }
        }
    }

    private static HunkLocation parseHunkHeader(String line) {
        String[] parts = line.split("\\s+");
        String sourceLocationString = parts[1].substring(1);
        String targetLocationString = parts[2].substring(1);

        return new HunkLocation(Integer.parseInt(sourceLocationString.split(",")[0]), Integer.parseInt(targetLocationString.split(",")[0]));
    }
}